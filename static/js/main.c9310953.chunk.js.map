{"version":3,"sources":["audio/start.wav","audio/end.wav","audio/warning.mp3","audio/end-round.wav","serviceWorker.js","components/Button/Button.js","components/Container/Container.js","components/Text/Text.js","components/Input/Input.js","components/Audio/Audio.js","App/Controls/Controls.js","App/Rounds/Rounds.js","App/Timer/Timer.js","App/Setup/Setup.js","App/useTabataHook.js","App/index.js","ThemeProvider.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getButtonColor","_ref","type","theme","default","StyledButton","styled","button","_templateObject","props","darken","Button","_ref2","children","onClick","react_default","a","createElement","Container","div","Container_templateObject","Center","_templateObject2","StyledText","Text_templateObject","size","weight","as","startsWith","Text","_ref2$tag","tag","style","key","Input","input","Input_templateObject","React","forwardRef","ref","src","Controls","onToggle","isStarted","useHotKeys","e","preventDefault","Fragment","Button_Button","Text_Text","Rounds","round","Fade","transition","Timer_templateObject","Timer","memo","work","rest","react_transition_group","height","width","position","timeout","_","Setup","onChange","onSubmit","placeholder","name","defaultTabata","rounds","isFinished","App","_useTabataHook","initialTabataState","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","initialTabata","setInitialTabata","_useState3","_useState4","tabata","setTabata","audio","Audio","playSound","sound","play","useEffect","timer","start","endRound","warning","end","setInterval","objectSpread","clearTimeout","startTabata","stopTabata","handleTabataChange","value","defineProperty","Number","useTabataHook","Rounds_Rounds","Setup_Setup","target","Controls_Controls","defaultTheme","primary","success","danger","ThemeProvider","_ref$theme","styled_components_browser_esm","GlobalStyle","createGlobalStyle","src_templateObject","reset","ReactDOM","render","ThemeProvider_ThemeProvider","App_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9310953.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/start.39da0fb3.wav\";","module.exports = __webpack_public_path__ + \"static/media/end.a3a7b812.wav\";","module.exports = __webpack_public_path__ + \"static/media/warning.111a056b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/end-round.b5c21f3b.wav\";","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\n\nconst getButtonColor = ({ type, theme }) => (type ? theme[type] : theme.default);\n\nconst StyledButton = styled.button`\n  background-color: ${props => getButtonColor({ theme: props.theme, type: props.type })};\n  color: #fff;\n  padding: 20px 90px;\n  border-radius: 40px;\n  font-size: 30px;\n  max-width: 240px;\n  width: 100%;\n  text-align: center;\n  outline: none;\n  user-select: none;\n\n  transition: background-color 300ms;\n\n  &:hover,\n  &:active {\n    background-color: ${props => darken(0.1, getButtonColor({ theme: props.theme, type: props.type }))};\n  }\n\n  &:focus {\n    background-color: ${props => darken(0.05, getButtonColor({ theme: props.theme, type: props.type }))};\n  }\n`;\n\nconst Button = ({ type, children, onClick }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {children}\n  </StyledButton>\n);\n\nexport { Button };\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nexport { Container, Center };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledText = styled.p`\n  font-size: ${props => props.size};\n  font-weight: ${props => props.weight};\n  margin: 20px;\n  user-select: none;\n\n  ${({ as }) => {\n    if (as.startsWith('h')) {\n      return `\n        letter-spacing: 5px;\n      `;\n    }\n    return null;\n  }}\n`;\n\nconst Text = ({\n  children, tag = 'p', size, weight, style, key,\n}) => (\n  <StyledText as={tag} size={size} weight={weight} style={style} key={key}>\n    {children}\n  </StyledText>\n);\n\nexport { Text };\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 20px 35px;\n  font-size: 25px;\n  outline: none;\n  background-color: #f5f5f5;\n  border: none;\n  border-radius: 40px;\n  display: block;\n  margin-bottom: 30px;\n\n  transition: background-color 300ms;\n\n  &::placeholder {\n    transition: transform 300ms;\n    transform: translateX(0);\n  }\n\n  &:focus {\n    background-color: #eee;\n\n    &::placeholder {\n      transform: translate(4px);\n    }\n  }\n`;\n\nexport { Input };\n","import React from 'react';\n\nconst Audio = React.forwardRef(({ src, type }, ref) => (\n  <audio ref={ref}>\n    <source src={src} type={type} />\n    Your browser does not support the audio element.\n  </audio>\n));\n\nexport { Audio };\n","import React from 'react';\nimport useHotKeys from 'react-hotkeys-hook';\n\nimport { Text, Button } from '../../components';\n\nconst Controls = ({ onToggle, isStarted }) => {\n  useHotKeys('space, enter', (e) => {\n    e.preventDefault();\n    onToggle();\n  });\n\n  return (\n    <React.Fragment>\n      <Button type={isStarted ? 'danger' : 'success'} onClick={onToggle}>\n        {isStarted ? 'Stop' : 'Start'}\n      </Button>\n      <Text size=\"14px\">Press space or enter to start/stop timer</Text>\n    </React.Fragment>\n  );\n};\n\nexport { Controls };\n","import React from 'react';\nimport { Text } from '../../components';\n\nconst Rounds = ({ round }) => (\n  <Text tag=\"h2\" size=\"30px\">\n    Round\n    {' '}\n    {round}\n  </Text>\n);\n\nexport { Rounds };\n","import React from 'react';\nimport { TransitionGroup } from 'react-transition-group';\nimport transition from 'styled-transition-group';\n\nimport { Text } from '../../components';\n\nconst Fade = transition.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) scale(1);\n\n  &:enter {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.8);\n  }\n  \n  &:enter-active {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n    transition: opacity 300ms, transform 300ms;\n  }\n\n  &:exit {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n  }\n  \n  &:exit-active {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(1);\n    transition: opacity 300ms, transform 300ms;\n  }\n`;\n\nconst Timer = React.memo(\n  ({ work, rest }) => (\n    <React.Fragment>\n      <TransitionGroup\n        style={{\n          height: 200,\n          width: 200,\n          position: 'relative',\n        }}\n      >\n        <Fade key={work} timeout={300}>\n          <Text tag=\"h1\" weight=\"bold\" size=\"180px\">\n            {work || rest}\n          </Text>\n        </Fade>\n      </TransitionGroup>\n      <Text tag=\"h2\" size=\"30px\">\n        {work ? 'WORK!' : 'Rest'}\n      </Text>\n    </React.Fragment>\n  ),\n  (_, props) => props.work === 0 && props.rest === 0,\n);\n\nexport { Timer };\n","import React from 'react';\nimport { Input } from '../../components';\n\nconst Setup = ({ onChange }) => (\n  <form onSubmit={e => e.preventDefault()} onChange={onChange}>\n    <Input type=\"number\" placeholder=\"Rounds (8)\" name=\"rounds\" />\n    <Input type=\"number\" placeholder=\"Rest (10)\" name=\"rest\" />\n    <Input type=\"number\" placeholder=\"Work (20)\" name=\"work\" />\n  </form>\n);\n\nexport { Setup };\n","import { useState, useEffect } from 'react';\n\nimport {\n  start, endRound, warning, end,\n} from '../audio';\n\nconst defaultTabata = {\n  rounds: 8,\n  work: 20,\n  rest: 10,\n  isStarted: false,\n  isFinished: false,\n};\n\nconst useTabataHook = (initialTabataState = defaultTabata) => {\n  const [initialTabata, setInitialTabata] = useState(initialTabataState);\n  const [tabata, setTabata] = useState(initialTabata);\n\n  const startTabata = () => setTabata({\n    ...tabata,\n    isStarted: true,\n  });\n  const stopTabata = () => setTabata(initialTabataState);\n\n  const audio = new Audio();\n\n  const playSound = (sound) => {\n    audio.src = sound;\n    audio.play();\n  };\n\n  useEffect(() => {\n    const {\n      work, rounds, rest, isStarted, isFinished,\n    } = tabata;\n\n    if (work === initialTabata.work && isStarted) {\n      playSound(start);\n    }\n    if (work === 0 && rest === initialTabata.rest && isStarted) {\n      playSound(endRound);\n    }\n    if (work <= 3 && work !== 0 && isStarted) {\n      playSound(warning);\n    }\n    if (isFinished) {\n      playSound(end);\n    }\n\n    let timer;\n    if (isStarted && !isFinished) {\n      if (work > 0) {\n        timer = setInterval(() => {\n          setTabata({\n            ...tabata,\n            work: work - 1,\n          });\n        }, 1000);\n      }\n\n      if (work === 0) {\n        timer = setInterval(() => {\n          setTabata({\n            ...tabata,\n            rest: rest - 1,\n          });\n        }, 1000);\n      }\n\n      if (rest === 0 && work === 0) {\n        setTabata({\n          ...tabata,\n          rounds: rounds - 1,\n          work: initialTabata.work,\n          rest: initialTabata.rest,\n        });\n      }\n\n      if (rounds === 1 && rest === 0 && work === 0) {\n        setTabata({ ...initialTabata, isFinished: true });\n      }\n    } else {\n      clearTimeout(timer);\n    }\n\n    if (isFinished) {\n      setInitialTabata(initialTabataState);\n      setTabata(initialTabataState);\n    }\n\n    return () => clearTimeout(timer);\n  });\n\n  const handleTabataChange = ({ value, name }) => {\n    setInitialTabata({\n      ...initialTabata,\n      [name]: Number(value),\n    });\n    setTabata({\n      ...tabata,\n      [name]: Number(value),\n    });\n  };\n\n  return {\n    tabata,\n    startTabata,\n    stopTabata,\n    handleTabataChange,\n  };\n};\n\nexport { useTabataHook };\n","import React from 'react';\nimport { Container, Center } from '../components';\n\nimport { Controls } from './Controls';\nimport { Rounds } from './Rounds';\nimport { Timer } from './Timer';\nimport { Setup } from './Setup';\n\nimport { useTabataHook } from './useTabataHook';\n\nconst App = () => {\n  const initialTabataState = {\n    rounds: 8,\n    work: 20,\n    rest: 10,\n    isStarted: false,\n    isFinished: false,\n  };\n\n  const {\n    tabata, startTabata, stopTabata, handleTabataChange,\n  } = useTabataHook(initialTabataState);\n\n  return (\n    <Container>\n      {tabata.isStarted ? (\n        <React.Fragment>\n          <Rounds round={tabata.rounds} />\n          <Center>\n            <Timer work={tabata.work} rest={tabata.rest} />\n          </Center>\n        </React.Fragment>\n      ) : (\n        <Setup onChange={({ target }) => handleTabataChange(target)} />\n      )}\n      <Center>\n        <Controls\n          onToggle={() => {\n            if (!tabata.isStarted) {\n              startTabata();\n            } else {\n              stopTabata();\n            }\n          }}\n          isStarted={tabata.isStarted}\n        />\n      </Center>\n    </Container>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\n\nexport const defaultTheme = {\n  default: '#e1e1e1',\n  primary: '#409eff',\n  success: '#67c23a',\n  warning: '#e6a23c',\n  danger: '#f56c6c',\n};\n\nconst ThemeProvider = ({ theme = defaultTheme, children }) => (\n  <StyledThemeProvider theme={theme}>\n    <React.Fragment>{children}</React.Fragment>\n  </StyledThemeProvider>\n);\n\nexport { ThemeProvider };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport * as serviceWorker from './serviceWorker';\n\nimport { App } from './App';\nimport { ThemeProvider } from './ThemeProvider';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  html {\n    font-family: -apple-system, '.SFNSText-Regular', 'San Francisco',\n      BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Fira Sans', 'Droid Sans', 'Helvetica Neue', 'Lucida Grande', Arial,\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n  }\n  button {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n    color: inherit;\n    font: inherit;\n    text-align: inherit;\n    outline: none;\n    line-height: inherit;\n    -webkit-appearance: none;\n    cursor: pointer;\n  }\n  *, *:before, *:after {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst Root = () => (\n  <ThemeProvider>\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}