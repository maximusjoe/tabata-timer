{"version":3,"sources":["audio/start.wav","audio/end.wav","audio/warning.mp3","audio/end-round.wav","serviceWorker.js","components/Button/Button.js","components/Container/Container.js","components/Text/Text.js","components/Input/Input.js","components/Audio/Audio.js","App/Controls.js","App/Setup.js","App/Rounds.js","App/Timer.js","App/useTabataHook.js","App/index.js","ThemeProvider.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getButtonColor","_ref","type","theme","default","StyledButton","styled","button","_templateObject","props","darken","Button","_ref2","children","onClick","react_default","a","createElement","Container","div","Container_templateObject","Center","_templateObject2","StyledText","Text_templateObject","size","weight","as","startsWith","Text","_ref2$tag","tag","style","key","Input","input","Input_templateObject","React","forwardRef","ref","src","Controls","onToggle","isStarted","useHotKeys","e","preventDefault","Fragment","Button_Button","Text_Text","Setup","onChange","onSubmit","className","placeholder","name","width","Rounds","round","Fade","transition","Timer_templateObject","Timer","memo","work","rest","react_transition_group","height","position","timeout","_","defaultTabata","rounds","workMin","workMax","restPercent","isFinished","App","_useTabataHook","initialTabataState","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","initialTabata","setInitialTabata","_useState3","_useState4","tabata","setTabata","randomWorkTime","Math","floor","random","useEffect","audio","Audio","playSound","sound","play","timer","start","endRound","warning","end","setInterval","objectSpread","clearTimeout","startTabata","stopTabata","handleTabataChange","value","defineProperty","Number","useTabataHook","concat","fontSize","textAlign","Rounds_Rounds","Setup_Setup","target","Controls_Controls","defaultTheme","primary","success","danger","ThemeProvider","_ref$theme","styled_components_browser_esm","GlobalStyle","createGlobalStyle","src_templateObject","reset","ReactDOM","render","ThemeProvider_ThemeProvider","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6df40a93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/start.39da0fb3.wav\";","module.exports = __webpack_public_path__ + \"static/media/end.a3a7b812.wav\";","module.exports = __webpack_public_path__ + \"static/media/warning.111a056b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/end-round.b5c21f3b.wav\";","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nconst getButtonColor = ({ type, theme }) => (type ? theme[type] : theme.default);\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: ${props => getButtonColor({ theme: props.theme, type: props.type })};\r\n  color: #fff;\r\n  padding: 20px 90px;\r\n  border-radius: 40px;\r\n  font-size: 30px;\r\n  max-width: 240px;\r\n  width: 100%;\r\n  text-align: center;\r\n  outline: none;\r\n  user-select: none;\r\n\r\n  transition: background-color 300ms;\r\n\r\n  &:hover,\r\n  &:active {\r\n    background-color: ${props => darken(0.1, getButtonColor({ theme: props.theme, type: props.type }))};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${props => darken(0.05, getButtonColor({ theme: props.theme, type: props.type }))};\r\n  }\r\n`;\r\n\r\nconst Button = ({ type, children, onClick }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nexport { Button };\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport { Container, Center };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledText = styled.p`\r\n  font-size: ${props => props.size};\r\n  font-weight: ${props => props.weight};\r\n  margin: 20px;\r\n  user-select: none;\r\n\r\n  ${({ as }) => {\r\n    if (as.startsWith('h')) {\r\n      return `\r\n        letter-spacing: 5px;\r\n      `;\r\n    }\r\n    return null;\r\n  }}\r\n`;\r\n\r\nconst Text = ({\r\n  children, tag = 'p', size, weight, style, key,\r\n}) => (\r\n  <StyledText as={tag} size={size} weight={weight} style={style} key={key}>\r\n    {children}\r\n  </StyledText>\r\n);\r\n\r\nexport { Text };\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  padding: 20px 35px;\r\n  font-size: 25px;\r\n  outline: none;\r\n  background-color: #e8e8e8;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 40px;\r\n  margin-bottom: 30px;\r\n\r\n  transition: background-color 300ms;\r\n\r\n  &::placeholder {\r\n    transition: transform 300ms;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #eee;\r\n\r\n    &::placeholder {\r\n      transform: translate(4px);\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Input };\r\n","import React from 'react';\r\n\r\nconst Audio = React.forwardRef(({ src, type }, ref) => (\r\n  <audio ref={ref}>\r\n    <source src={src} type={type} />\r\n    Your browser does not support the audio element.\r\n  </audio>\r\n));\r\n\r\nexport { Audio };\r\n","import React from 'react';\r\nimport useHotKeys from 'react-hotkeys-hook';\r\n\r\nimport { Text, Button } from '../components';\r\n\r\nconst Controls = ({ onToggle, isStarted }) => {\r\n  useHotKeys('space, enter', (e) => {\r\n    e.preventDefault();\r\n    onToggle();\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button type={isStarted ? 'danger' : 'success'} onClick={onToggle}>\r\n        {isStarted ? 'Stop' : 'Start'}\r\n      </Button>\r\n      <Text size=\"14px\"></Text>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { Controls };\r\n","import React from 'react';\r\nimport { Input } from '../components';\r\n\r\nconst Setup = ({ onChange }) => (\r\n  <>\r\n    <style>\r\n      {`\r\n      .grid-container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: 70%;\r\n        padding: 1rem;\r\n      }\r\n      .grid-item {\r\n        text-align: center;\r\n        margin: 0 auto;\r\n        width: 100%;\r\n      }\r\n      .grid-item:nth-child(1) {\r\n        grid-row: 1 / 2;\r\n        grid-column: 1 / 4;\r\n      }\r\n      .grid-item:nth-child(2) {\r\n        grid-row: 2 / 3;\r\n        grid-column: 1 / 2;\r\n      }\r\n      .grid-item:nth-child(3) {\r\n        grid-row: 2 / 3;\r\n        grid-column: 2 / 3;\r\n        padding: 1rem;\r\n        margin: 1rem;\r\n        text-align: center;\r\n        font-size: 1.25rem;\r\n      }\r\n      .grid-item:nth-child(4) {\r\n        grid-row: 2 / 3;\r\n        grid-column: 3 / 4;\r\n      }\r\n      .grid-item:nth-child(5) {\r\n        grid-row: 3 / 4;\r\n        grid-column: 1 / 4;\r\n        \r\n    `}\r\n    </style>\r\n    <form onSubmit={e => e.preventDefault()} onChange={onChange}>\r\n\r\n      <div className=\"grid-container\">\r\n        <div className=\"grid-item\"><Input type=\"number\" placeholder=\"Sets(5)\" name=\"rounds\" /></div>\r\n        <div className=\"grid-item\"><Input type=\"number\" placeholder=\"Min\" name=\"workMin\" width=\"40%\" /></div>\r\n        <div className=\"grid-item\"><p>To</p></div>\r\n        <div className=\"grid-item\"><Input type=\"number\" placeholder=\"Max\" name=\"workMax\" /></div>\r\n        <div className=\"grid-item\"><Input type=\"number\" placeholder=\"Rest (60%)\" name=\"restPercent\" /></div>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nexport { Setup };\r\n","import React from 'react';\r\nimport { Text } from '../components';\r\n\r\nconst Rounds = ({ round }) => (\r\n  <Text tag=\"h2\" size=\"30px\">\r\n    Rounds Left:\r\n    {' '}\r\n    {round - 1}\r\n  </Text>\r\n);\r\n\r\nexport { Rounds };\r\n","import React from 'react';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport transition from 'styled-transition-group';\r\n\r\nimport { Text } from '../components';\r\n\r\nconst Fade = transition.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%) scale(1);\r\n\r\n  &:enter {\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%) scale(0.8);\r\n  }\r\n  \r\n  &:enter-active {\r\n    opacity: 1;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    transition: opacity 300ms, transform 300ms;\r\n  }\r\n\r\n  &:exit {\r\n    opacity: 1;\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n  \r\n  &:exit-active {\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    transition: opacity 300ms, transform 300ms;\r\n  }\r\n`;\r\n\r\nconst Timer = React.memo(\r\n  ({ work, rest }) => (\r\n    <React.Fragment>\r\n      <TransitionGroup\r\n        style={{\r\n          height: 200,\r\n          width: 200,\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Fade key={work} timeout={300}>\r\n          <Text tag=\"h1\" weight=\"bold\" size=\"180px\">\r\n            {work || rest}\r\n          </Text>\r\n        </Fade>\r\n      </TransitionGroup>\r\n      <Text tag=\"h2\" size=\"30px\">\r\n        {work ? 'WORK' : 'Rest'}\r\n      </Text>\r\n    </React.Fragment>\r\n  ),\r\n  (_, props) => props.work === 0 && props.rest === 0,\r\n);\r\n\r\nexport { Timer };\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  start, endRound, warning, end,\r\n} from '../audio';\r\n\r\nconst defaultTabata = {\r\n  rounds: 5,\r\n  workMin: 45,\r\n  workMax: 90,\r\n  work: 60,\r\n  rest: 10,\r\n  restPercent: 60,\r\n  isStarted: false,\r\n  isFinished: false,\r\n};\r\n\r\nconst useTabataHook = (initialTabataState = defaultTabata) => {\r\n  const [initialTabata, setInitialTabata] = useState(initialTabataState);\r\n  const [tabata, setTabata] = useState(initialTabata);\r\n  const randomWorkTime = Math.floor(Math.random() * (initialTabata.workMax - initialTabata.workMin + 1) + initialTabata.workMin);\r\n\r\n  useEffect(() => {\r\n    initialTabata.work = randomWorkTime;\r\n    tabata.work = randomWorkTime;\r\n    tabata.rest = initialTabata.rest;\r\n  }, [tabata.rounds], [tabata.isStarted], []);\r\n\r\n  console.log(\"Init: \" + initialTabata.work);\r\n  console.log(\"Current:\" + tabata.work);\r\n\r\n  if (Math.floor((initialTabata.work / 2)) === tabata.work) {\r\n    initialTabata.rest = Math.floor(initialTabata.work * (initialTabata.restPercent / 100));\r\n    tabata.rest = initialTabata.rest;\r\n    console.log(\"trigger\");\r\n  }\r\n\r\n  if (initialTabata.rounds === tabata.rounds) {\r\n    initialTabata.rest = Math.floor(initialTabata.work * (initialTabata.restPercent / 100));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const startTabata = () => {\r\n    setTabata({\r\n      ...tabata,\r\n      isStarted: true,\r\n      work: randomWorkTime,\r\n      rest: randomWorkTime * (tabata.restPercent / 100),\r\n    });\r\n    initialTabata.work = randomWorkTime;\r\n  }\r\n  const stopTabata = () => setTabata(initialTabataState);\r\n\r\n  const audio = new Audio();\r\n\r\n  const playSound = (sound) => {\r\n    audio.src = sound;\r\n    audio.play();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const {\r\n      work, rounds, rest, isStarted, isFinished,\r\n    } = tabata;\r\n\r\n\r\n    if (rest === 0) {\r\n      playSound(start);\r\n    }\r\n    if (work === 0 && rest === initialTabata.rest && isStarted) {\r\n      playSound(endRound);\r\n    }\r\n    if (work <= 3 && work !== 0 && isStarted) {\r\n      playSound(warning);\r\n    }\r\n    if (isFinished) {\r\n      playSound(end);\r\n    }\r\n\r\n    let timer;\r\n    if (isStarted && !isFinished) {\r\n      if (work > 0) {\r\n        timer = setInterval(() => {\r\n          setTabata({\r\n            ...tabata,\r\n            work: work - 1,\r\n          });\r\n        }, 1000);\r\n      }\r\n\r\n      if (work === 0) {\r\n        timer = setInterval(() => {\r\n          setTabata({\r\n            ...tabata,\r\n            rest: rest - 1,\r\n          });\r\n        }, 1000);\r\n      }\r\n\r\n      if (rest === 0 && work === 0) {\r\n        setTabata({\r\n          ...tabata,\r\n          rounds: rounds - 1,\r\n        });\r\n      }\r\n\r\n      if (rounds === 1 && rest === 0 && work === 0) {\r\n        setTabata({ ...initialTabata, isFinished: true });\r\n      }\r\n    } else {\r\n      clearTimeout(timer);\r\n    }\r\n\r\n    if (isFinished) {\r\n      setInitialTabata(initialTabataState);\r\n      setTabata(initialTabataState);\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  const handleTabataChange = ({ value, name }) => {\r\n    setInitialTabata({\r\n      ...initialTabata,\r\n      [name]: Number(value),\r\n    });\r\n    setTabata({\r\n      ...tabata,\r\n      [name]: Number(value),\r\n    });\r\n  };\r\n\r\n  return {\r\n    tabata,\r\n    startTabata,\r\n    stopTabata,\r\n    handleTabataChange,\r\n  };\r\n};\r\n\r\nexport { useTabataHook };\r\n","import React from 'react';\r\nimport { Container, Center } from '../components';\r\n\r\nimport { Controls } from './Controls';\r\nimport { Setup } from './Setup';\r\nimport { Rounds } from './Rounds';\r\nimport { Timer } from './Timer';\r\nimport { Text } from '../components';\r\n\r\nimport { useTabataHook } from './useTabataHook';\r\n\r\nconst App = () => {\r\n  const initialTabataState = {\r\n    rounds: 5,\r\n    workMin: 45,\r\n    workMax: 90,\r\n    work: 60,\r\n    rest: 10,\r\n    restPercent: 60,\r\n    isStarted: false,\r\n    isFinished: false,\r\n  };\r\n\r\n  const {\r\n    tabata, startTabata, stopTabata, handleTabataChange,\r\n  } = useTabataHook(initialTabataState);\r\n\r\n  return (\r\n    <>\r\n      {/* set background color to green when tabata is started */}\r\n      {tabata.isStarted && <style>\r\n        {`\r\n        body {\r\n          background-color: ${(tabata.work === 0) ? 'red' : 'green'};\r\n        }\r\n      `}\r\n      </style>}\r\n\r\n\r\n      <Container>\r\n        <div style={{\r\n          fontSize: \"2rem\", textAlign: \"center\"\r\n        }}><Text tag=\"h1\" size=\"40px\">\r\n            Tabata Timer Randomizer\r\n          </Text></div>\r\n        {tabata.isStarted ? (\r\n          <React.Fragment>\r\n            <Rounds round={tabata.rounds} />\r\n            <Center>\r\n              <Timer work={tabata.work} rest={tabata.rest} />\r\n            </Center>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Setup onChange={({ target }) => handleTabataChange(target)} />\r\n        )}\r\n        <Center>\r\n          <Controls\r\n            onToggle={() => {\r\n              if (!tabata.isStarted) {\r\n                startTabata();\r\n              } else {\r\n                stopTabata();\r\n              }\r\n            }}\r\n            isStarted={tabata.isStarted}\r\n          />\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { App };\r\n","import React from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\n\r\nexport const defaultTheme = {\r\n  default: '#e1e1e1',\r\n  primary: '#409eff',\r\n  success: '#67c23a',\r\n  warning: '#e6a23c',\r\n  danger: '#f56c6c',\r\n};\r\n\r\nconst ThemeProvider = ({ theme = defaultTheme, children }) => (\r\n  <StyledThemeProvider theme={theme}>\r\n    <React.Fragment>{children}</React.Fragment>\r\n  </StyledThemeProvider>\r\n);\r\n\r\nexport { ThemeProvider };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { App } from './App';\r\nimport { ThemeProvider } from './ThemeProvider';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  html {\r\n    font-family: -apple-system, '.SFNSText-Regular', 'San Francisco',\r\n      BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\r\n      'Fira Sans', 'Droid Sans', 'Helvetica Neue', 'Lucida Grande', Arial,\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  button {\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: auto;\r\n    overflow: visible;\r\n    background: transparent;\r\n    color: inherit;\r\n    font: inherit;\r\n    text-align: inherit;\r\n    outline: none;\r\n    line-height: inherit;\r\n    -webkit-appearance: none;\r\n    cursor: pointer;\r\n  }\r\n  *, *:before, *:after {\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n`;\r\n\r\nconst Root = () => (\r\n  <ThemeProvider>\r\n    <GlobalStyle />\r\n    <App />\r\n  </ThemeProvider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}